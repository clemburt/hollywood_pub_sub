name: CI Pipeline

on:
  push:
    branches:
      - '**'  # Run on push to any branch
  pull_request:
    branches:
      - '**'  # Run on PRs to any branch
  workflow_dispatch:  # Allow manual trigger

env:
  IMAGE_NAME: ghcr.io/clemburt/hollywood_pub_sub:latest

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Authenticate to GitHub Container Registry
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build the Docker image (pull base image to ensure freshness)
      - name: Build Docker image
        run: docker build --pull -t ${{ env.IMAGE_NAME }} .

      # Push to GHCR
      - name: Push Docker image
        run: docker push ${{ env.IMAGE_NAME }}

  test:
    name: Run Tests in Docker Container
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      # Run tests using PDM script (defined in pyproject.toml)
      - name: Run tests with PDM inside container
        env:
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
        run: |
          docker run --rm \
            -e TMDB_API_KEY="${{ secrets.TMDB_API_KEY }}" \
            ${{ env.IMAGE_NAME }} \
            pdm test

  run_main:
    name: Run Main Script
    runs-on: ubuntu-latest
    needs: build
    if: |
      github.ref == 'refs/heads/main' ||
      (
        github.event_name == 'pull_request' &&
        github.event.pull_request.base.ref == 'main' &&
        contains(github.event.pull_request.labels.*.name, 'CICD')
      )
    steps:
      - uses: actions/checkout@v3

      # Execute the main CLI command explicitly
      - name: Run main CLI command
        env:
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
        run: |
          docker run --rm \
            -e TMDB_API_KEY="${{ secrets.TMDB_API_KEY }}" \
            ${{ env.IMAGE_NAME }} \
            hollywood_pub_sub run \
              --api_key "$TMDB_API_KEY" \
              --max_movies_per_composer 10 \
              --winning_threshold 5
