name: CI Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  test:
    name: Build Docker Image and Run Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Build the Docker image
      - name: Build Docker image
        run: docker build -t hollywood_pub_sub:latest .

      # Run tests inside the container
      - name: Run tests in container
        env:
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
        run: |
          docker run --rm \
            -e TMDB_API_KEY="${{ secrets.TMDB_API_KEY }}" \
            hollywood_pub_sub:latest \
            pdm run test

  run-main:
    name: Run Main Script in Docker
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main'

    steps:
      - uses: actions/checkout@v3

      # Build the Docker image again (or you can optimize caching)
      - name: Build Docker image
        run: docker build -t hollywood_pub_sub:latest .

      # Run the main script inside the container
      - name: Run main script in container
        env:
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
        run: |
          docker run --rm \
            -e TMDB_API_KEY="${{ secrets.TMDB_API_KEY }}" \
            hollywood_pub_sub:latest \
            python src/hollywood_pub_sub/main.py --api_key "$TMDB_API_KEY" --max_movies_per_composer 10 --winning_threshold 5
