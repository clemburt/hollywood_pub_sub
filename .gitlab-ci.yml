stages:
  - build
  - test
  - run_main

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE/hollywood_pub_sub:latest

.default_docker:
  image: docker:24.0
  services:
    - docker:24.0-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

build:
  stage: build
  extends: .default_docker
  script:
    - docker build --pull -t "$IMAGE_NAME" .
    - docker push "$IMAGE_NAME"
  tags:
    - docker

test:
  stage: test
  extends: .default_docker
  needs: ["build"]
  script:
    - docker pull "$IMAGE_NAME"
    - docker run --rm \
        -e TMDB_API_KEY="$TMDB_API_KEY" \
        "$IMAGE_NAME" \
        pdm test
  tags:
    - docker

run_main:
  stage: run_main
  extends: .default_docker
  script:
    - echo "Parent job for run_main â€“ triggers downstream"
  needs: ["build"]
  when: manual
  allow_failure: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" && $CI_MERGE_REQUEST_LABELS =~ /CICD/'
  tags:
    - docker

run_main_api:
  stage: run_main
  extends: .default_docker
  needs: ["run_main"]
  script:
    - docker pull "$IMAGE_NAME"
    - docker run --rm \
        -e TMDB_API_KEY="$TMDB_API_KEY" \
        "$IMAGE_NAME" \
        hollywood_pub_sub run \
          --api_key "$TMDB_API_KEY" \
          --max_movies_per_composer 10 \
          --winning_threshold 3
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" && $CI_MERGE_REQUEST_LABELS =~ /CICD/'
  tags:
    - docker

run_main_json:
  stage: run_main
  extends: .default_docker
  needs: ["run_main"]
  script:
    - docker pull "$IMAGE_NAME"
    - docker run --rm \
        "$IMAGE_NAME" \
        hollywood_pub_sub run \
          --json_path src/hollywood_pub_sub/movie_database.json \
          --max_movies_per_composer 10 \
          --winning_threshold 3
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" && $CI_MERGE_REQUEST_LABELS =~ /CICD/'
  tags:
    - docker
